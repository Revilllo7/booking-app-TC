apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
  namespace: booking-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-db
  template:
    metadata:
      labels:
        app: user-db
    spec:
      initContainers:
        - name: copy-init-sql
          image: busybox
          command: ['sh', '-c', 'cp /init/init.sql /initdb/init.sql']
          volumeMounts:
            - name: init-sql
              mountPath: /initdb
            - name: init-sql-config
              mountPath: /init
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "userdb"
          volumeMounts:
            - name: user-db-data
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: user-db-data
          persistentVolumeClaim:
            claimName: user-db-pvc
        - name: init-sql
          emptyDir: {}
        - name: init-sql-config
          configMap:
            name: user-init-sql
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  namespace: booking-app
spec:
  selector:
    app: user-db
  ports:
    - port: 5432
      targetPort: 5432
